import { createSlice } from '@reduxjs/toolkit';
import { initialState } from '../initialState/counter';
import { 
    _increment,
    _decrement,
    _incrementByAmount
} from './actions';
import { incrementAsync } from './thunks';

export const counterSlice = createSlice({
  name: 'counter',
  initialState,
  // The `reducers` field lets us define reducers and generate associated actions
  reducers: {
    increment: _increment,
    decrement: _decrement,
    incrementByAmount: _incrementByAmount
  },
  // The `extraReducers` field lets the slice handle actions defined elsewhere,
  // including actions generated by createAsyncThunk or in other slices.
  extraReducers: (builder) => {
    builder
        .addCase(incrementAsync.pending, (state) => {
            state.status = 'loading';
        })
        .addCase(incrementAsync.fulfilled, (state, action) => {
            state.status = 'idle';
            state.value += action.payload;
        })
        .addCase(incrementAsync.rejected, (state) => {
            state.status = 'failed';
        });
  },
});

export const { increment, decrement, incrementByAmount } = counterSlice.actions;

export default counterSlice.reducer;
